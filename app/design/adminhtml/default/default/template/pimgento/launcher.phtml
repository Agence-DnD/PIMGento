<?php
/**
 * @author    Agence Dn'D <magento@dnd.fr>
 * @copyright Copyright (c) 2015 Agence Dn'D (http://www.dnd.fr)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
?>

<?php $tasks = $this->getTasks(); ?>

<div class="task-command">
    <?php if(count($tasks)): ?>
        <select name="task-command" id="task-command">
            <option value=""><?php echo $this->__('Select') ?></option>
            <?php foreach($tasks as $command => $task): ?>
                <option value="<?php echo $command ?>"><?php echo $task['label'] ?></option>
            <?php endforeach; ?>
        </select>
    <?php else: ?>
        <p><?php echo $this->__('No task was found') ?></p>
    <?php endif; ?>
</div>

<div id="task-execute-zone">

    <form action="#" name="task-options" id="task-options"></form>

    <div id="tasks-types">
        <div id="type-file" class="task-execute" style="display:none">
            <div id="<?php echo $this->getHtmlId() ?>" class="uploader">
                <div class="buttons a-right">
                    <?php echo $this->getBrowseButtonHtml(); ?>
                    <?php echo $this->getUploadButtonHtml(); ?>
                </div>
            </div>
        </div>
        <div class="no-display" id="<?php echo $this->getElementId('template') ?>">
            <div id="{{id}}-container" class="file-row">
                <span class="file-info">{{name}} {{size}}</span>
                <span class="delete-button"><?php echo $this->getDeleteButtonHtml() ?></span>
                <span class="progress-text"></span>
                <div class="clear"></div>
            </div>
        </div>
        <div id="type-button" class="task-execute" style="display:none">
            <?php echo $this->getExecuteButtonHtml() ?>
        </div>
    </div>

</div>

<script type="text/javascript">
//<![CDATA[
    Uploader.prototype.onFileSuccess = function(file, response) {
        response = response.evalJSON();
        var id = file.uniqueIdentifier;
        var error = response.error;
        this._getFileContainerById(id)
            .removeClassName('progress')
            .addClassName(error ? 'error': 'complete')
        ;
        /* Updated */
        this._getProgressTextById(id).update(this._translate(
            error ? this._XSSFilter(error) :'<?php echo $this->getExecuteButtonHtml() ?>'
        ));

        if (!error) {
            this._getProgressTextById(id).down().rel = response.file;
        }
        /* ******* */

        setTimeout(function() {
            if(!error) {
                document.fire('uploader:fileSuccess', {
                    response: Object.toJSON(response),
                    containerId: this.elementsIds.container
                });
            } else {
                document.fire('uploader:fileError', {
                    containerId: this.elementsIds.container
                });
            }
        }.bind(this) , !error ? this.onCompleteTimeout: this.onCompleteTimeout * 3);
    };

    Uploader.prototype.onUploadStart = function() {
        var files = this.uploader.files;

        files.each(function (file) {
            var id = file.uniqueIdentifier;

            /* Updated */
            if (!this._getProgressTextById(id).down()) {
                this._getFileContainerById(id)
                    .removeClassName('new')
                    .removeClassName('error')
                    .addClassName('progress');
                this._getProgressTextById(id).update(this._translate('Uploading...'));

                var deleteButton = this._getDeleteButtonById(id);
                if (deleteButton) {
                    this._getDeleteButtonById(id).hide();
                }
            }
            /* ******* */
        }.bind(this));

        this.files = this.uploader.files;
    };

    var currentUploader = null;

    $('task-command').observe('change', function() {
        if (!currentUploader) {
            currentUploader = new Uploader(<?php echo $this->getJsonConfig(); ?>);
        }
    });

    var taskExecutor = new TaskExecutor(
        '<?php echo $this->getUrl('adminhtml/task/launch') ?>',
        '<?php echo $this->getUrl('adminhtml/task/options') ?>',
        <?php echo $this->getTasksJson() ?>);
//]]>
</script>
